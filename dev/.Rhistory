rename(zip = Id2) %>%
select(zip, matches("^(M|F)_")) %>%
gather("agesex_grp", "pop", -zip) %>%
mutate(agesex_grp = str_replace(agesex_grp, "^(M|F)_(15_17|18_19)$", "\\1_15_19")) %>%
mutate(agesex_grp = str_replace(agesex_grp, "^(M|F)_(20|21|22_24)$", "\\1_20_24")) %>%
mutate(agesex_grp = str_replace(agesex_grp, "^(M|F)_(60_61|62_64)$", "\\1_60_64")) %>%
mutate(agesex_grp = str_replace(agesex_grp, "^(M|F)_(65_66|67_69)$", "\\1_65_69")) %>%
group_by(zip, agesex_grp) %>%
summarise(pop = sum(pop)) %>%
ungroup()
acs2
names(crosswalk)
hsa_acs_pop <- acs2 %>%
left_join(crosswalk, by = c("zip" = "zipcode13")) %>%
group_by(hsanum, hsacity, hsastate, agesex_grp) %>%
summarise(pop = sum(pop))
hsa_acs_pop
hsa_acs_pop <- acs2 %>%
left_join(crosswalk, by = c("zip" = "zipcode13")) %>%
group_by(hsanum, hsacity, hsastate, agesex_grp) %>%
summarise(pop = sum(pop)) %>%
ungroup()
hsa_acs_pop
36*32
36*34
hsa_acs_pop %>% group_by(hsacity) %>% summarise(nrow = n())
hsa_acs_pop %>% group_by(hsacity) %>% summarise(nrow = n()) %>%  print(n=34)
36*34
36*34 == nrow(hsa_acs_pop)
hsa_acs_pop
write_csv(hsa_acs_pop, "hsa_pop_acs5yr_2014.csv")
acs <- read_csv("hsa_pop_acs5yr_2014.csv")
library(tidyverse)
rm(list = ls())
# get population estimates by age-sex, county and year
pop <- read_csv("./PEP_2016_PEPAGESEX/PEP_2016_PEPAGESEX.csv")
pop_meta <- read_csv("./PEP_2016_PEPAGESEX/PEP_2016_PEPAGESEX_metadata.csv", col_names = c("var","description"))
pop
# total population counts
pop_check <- pop %>% select(matches("est7201.sex0_age999")) %>%
summarise_all(sum) %>%
gather("key", "val")
# age sex groups
age_start <- seq(0,85, by =5)
age_end <- c(age_start[-1] - 1, 110)
agesex_groups <- c(paste0("F_", age_start, "_", age_end), paste0("M_", age_start, "_", age_end)) %>%
str_replace("_(0|5)_", "_0\\1_") %>%
str_replace("_(4|9)$", "_0\\1")
agesex_groups
pop
pop_long <- gather(pop, "key", "val", 4:ncol(pop)) %>%
select(-1) %>%
rename(fips = GEO.id2, county = GEO.displaylabel) %>%
left_join(pop_meta, by = c("key"="var")) %>%
filter(!str_detect(description, "Both Sexes|Under 18 years")) %>%
filter(str_detect(description, "Population Estimate")) %>%
filter(str_detect(key, "(age([:digit:]+)to([:digit:]+))|(age85plus$)")) %>%
mutate(key = str_replace(key, "sex1", "sexM")) %>%
mutate(key = str_replace(key, "sex2", "sexF")) %>%
mutate(key = str_replace(key, "age85plus", "age85to110")) %>%
mutate(agesex_grp = str_replace(key, "^[:alnum:]+sex(M|F)_age([:digit:]+)to([:digit:]+)", "\\1_\\2_\\3")) %>%
mutate(agesex_grp = str_replace(agesex_grp, "_(0|5)_", "_0\\1_")) %>%
mutate(agesex_grp = str_replace(agesex_grp, "_(4|9)$", "_0\\1")) %>%
filter(agesex_grp %in% agesex_groups) %>%
mutate(county = str_replace(county, "County, Maine", "")) %>%
mutate(year = str_extract(key, "201[:digit:]")) %>%
mutate(year = as.integer(year)) %>%
select(fips, county, year, agesex_grp, val) %>%
rename(pop = val)
# pop_long should have 4032 rows
# 32 agesex groups * 16 counties * 7 years
check <- filter(pop_long, year == 2010)
check$agesex_grp %>% unique() %>% sort()
pop_long$key %>% unique() %>% sort()
# check that age sex group are correct
cbind(sort(unique(check$agesex_grp)), sort(agesex_groups))
unique(pop_long$year)
pop_long %>% group_by(year) %>% summarise(pop = sum(pop)) %>%
bind_cols(pop_check)
# totals match
# read in county to hsa crosswalk
hsa_cw <- read_csv("./create county to hsa crosswalk/county to hsa crosswalk long.csv") %>%
rename(fips = county)
hsa_cw
pop_long
hsa_pop <- pop_long %>%
left_join(hsa_cw, by = c("fips", "year")) %>%
mutate(hsa_pop = pop*ratio) %>%
group_by(year, agesex_grp, hsanum, hsacity, hsastate) %>%
summarise(hsa_pop = sum(hsa_pop)) %>%
ungroup()
#check that totals match
hsa_pop %>% group_by(year) %>%
summarise(pop = sum(hsa_pop)) %>%
mutate(pop = round(pop, 0)) %>%
bind_cols(pop_check) %>%
mutate(dif = pop - val)
# hsa totals match very closely
# check against 5 yr estimates?
hsa_pop
write_csv(hsa_pop, "hsa_pop.csv")
hsa_pop
acs
acs <- read_csv("hsa_pop_acs5yr_2014.csv")
acs
pop_cmp <- left_join(hsa_pop, acs)
pop_cmp
pop_cmp <- left_join(hsa_pop, acs) %>%
rename(pop_cw = hsa_pop, pop_acs = pop)
pop_cmp
pop_cmp %>% group_by(year) %>%
summarise(pop_cw = sum(pop_cw), pop_acs = sum(pop_acs))
View(pop_cmp)
pop_cmp <- left_join(hsa_pop, acs) %>%
rename(pop_cw = hsa_pop, pop_acs = pop) %>%
mutate(pop_acs = ifelse(is.na(pop_acs), 0, pop_acs))
pop_cmp
pop_cmp %>% group_by(year) %>%
summarise(pop_cw = sum(pop_cw), pop_acs = sum(pop_acs))
pop_cmp %>% group_by(year) %>%
summarise(pop_cw = sum(pop_cw), pop_acs = sum(pop_acs)) %>%
mutate(dif = pop_cw - pop_acs)
hsa_pop
pop_cmp <- hsa_pop %>%
filter(year %in% 2010:2014) %>%
group_by(agesex_grp, hsanum, hsacity, hsastate) %>%
summarise(hsa_pop = mean(hsa_pop))
pop_cmp <- hsa_pop %>%
filter(year %in% 2010:2014) %>%
group_by(agesex_grp, hsanum, hsacity, hsastate) %>%
summarise(hsa_pop = mean(hsa_pop)) %>%
left_join(acs)
pop_cmp
pop_cmp <- hsa_pop %>%
filter(year %in% 2010:2014) %>%
group_by(agesex_grp, hsanum, hsacity, hsastate) %>%
summarise(hsa_pop = mean(hsa_pop)) %>%
left_join(acs) %>%
summarise(pop_cw = sum(pop_cw), pop_acs = sum(pop_acs)) %>%
mutate(dif = pop_cw - pop_acs)
pop_cmp <- hsa_pop %>%
filter(year %in% 2010:2014) %>%
group_by(agesex_grp, hsanum, hsacity, hsastate) %>%
summarise(hsa_pop = mean(hsa_pop)) %>%
left_join(acs) %>%
rename(pop_cw = hsa_pop, pop_acs = pop) %>%
mutate(pop_acs = ifelse(is.na(pop_acs), 0, pop_acs))
# lets take the average of the crosswalk estimates from 2010 to 2014 and compare with acs
pop_cmp <- hsa_pop %>%
filter(year %in% 2010:2014) %>%
group_by(agesex_grp, hsanum, hsacity, hsastate) %>%
summarise(hsa_pop = mean(hsa_pop)) %>%
left_join(acs)
# lets take the average of the crosswalk estimates from 2010 to 2014 and compare with acs
pop_cmp <- hsa_pop %>%
filter(year %in% 2010:2014) %>%
group_by(agesex_grp, hsanum, hsacity, hsastate) %>%
summarise(hsa_pop = mean(hsa_pop)) %>%
left_join(acs) %>%
rename(pop_cw = hsa_pop, pop_acs = pop)
# lets take the average of the crosswalk estimates from 2010 to 2014 and compare with acs
pop_cmp <- hsa_pop %>%
filter(year %in% 2010:2014) %>%
group_by(agesex_grp, hsanum, hsacity, hsastate) %>%
summarise(hsa_pop = mean(hsa_pop)) %>%
left_join(acs) %>%
rename(pop_cw = hsa_pop, pop_acs = pop) %>%
mutate(pop_acs = ifelse(is.na(pop_acs), 0, pop_acs))
pop_cmp
pop_cmp <- hsa_pop %>%
filter(year %in% 2010:2014) %>%
group_by(agesex_grp, hsanum, hsacity, hsastate) %>%
summarise(hsa_pop = mean(hsa_pop)) %>%
left_join(acs) %>%
rename(pop_cw = hsa_pop, pop_acs = pop) %>%
mutate(pop_acs = ifelse(is.na(pop_acs), 0, pop_acs)) %>%
ungroup()
pop_cmp <- hsa_pop %>%
filter(year %in% 2010:2014) %>%
group_by(agesex_grp, hsanum, hsacity, hsastate) %>%
summarise(hsa_pop = mean(hsa_pop)) %>%
left_join(acs) %>%
rename(pop_cw = hsa_pop, pop_acs = pop) %>%
mutate(pop_acs = ifelse(is.na(pop_acs), 0, pop_acs)) %>%
ungroup()
hsa_pop
acs
pop_cmp <- hsa_pop %>%
filter(year %in% 2010:2014) %>%
group_by(agesex_grp, hsanum, hsacity, hsastate) %>%
summarise(hsa_pop = mean(hsa_pop)) %>%
left_join(acs)
# lets take the average of the crosswalk estimates from 2010 to 2014 and compare with acs
pop_cmp <- hsa_pop %>%
filter(year %in% 2010:2014) %>%
group_by(agesex_grp, hsanum, hsacity, hsastate) %>%
summarise(hsa_pop = mean(hsa_pop)) %>%
left_join(acs) %>%
rename(pop_cw = hsa_pop, pop_acs = pop)
# lets take the average of the crosswalk estimates from 2010 to 2014 and compare with acs
pop_cmp <- hsa_pop %>%
filter(year %in% 2010:2014) %>%
group_by(agesex_grp, hsanum, hsacity, hsastate) %>%
summarise(hsa_pop = mean(hsa_pop)) %>%
left_join(acs) %>%
rename(pop_cw = hsa_pop, pop_acs = pop) %>%
mutate(pop_acs = ifelse(is.na(pop_acs), 0, pop_acs))
# lets take the average of the crosswalk estimates from 2010 to 2014 and compare with acs
pop_cmp <- hsa_pop %>%
filter(year %in% 2010:2014) %>%
group_by(agesex_grp, hsanum, hsacity, hsastate) %>%
summarise(hsa_pop = mean(hsa_pop)) %>%
left_join(acs) %>%
rename(pop_cw = hsa_pop, pop_acs = pop)
pop_cmp
pop_cmp %>%     mutate(pop_acs = ifelse(is.na(pop_acs), 0, pop_acs))
pop_cmp <- hsa_pop %>%
filter(year %in% 2010:2014) %>%
group_by(agesex_grp, hsanum, hsacity, hsastate) %>%
summarise(hsa_pop = mean(hsa_pop)) %>%
left_join(acs) %>%
rename(pop_cw = hsa_pop, pop_acs = pop) %>%
mutate(pop_acs = ifelse(is.na(pop_acs), NA, pop_acs))
pop_cmp <- hsa_pop %>%
filter(year %in% 2010:2014) %>%
group_by(agesex_grp, hsanum, hsacity, hsastate) %>%
summarise(hsa_pop = mean(hsa_pop)) %>%
left_join(acs) %>%
rename(pop_cw = hsa_pop, pop_acs = pop) %>%
mutate(pop_acs = ifelse(is.na(pop_acs), 0, pop_acs))
Integer(0)
integer(0)
pop_cmp <- hsa_pop %>%
filter(year %in% 2010:2014) %>%
group_by(agesex_grp, hsanum, hsacity, hsastate) %>%
summarise(hsa_pop = mean(hsa_pop)) %>%
left_join(acs) %>%
rename(pop_cw = hsa_pop, pop_acs = pop) %>%
mutate(pop_acs = ifelse(is.na(pop_acs), 0, as.numeric(pop_acs))) %>%
ungroup()
pop_cmp
pop_cmp %>%
group_by(hsacity) %>%
summarise(pop_cw = sum(pop_cw), pop_acs = sum(pop_acs)) %>%
mutate(dif = pop_cw - pop_acs)
pop_cmp %>%
summarise(pop_cw = sum(pop_cw), pop_acs = sum(pop_acs)) %>%
mutate(dif = pop_cw - pop_acs)
pop_cmp %>%
summarise(pop_cw = sum(pop_cw), pop_acs = sum(pop_acs)) %>%
mutate(dif = pop_cw - pop_acs, dif_pct = round(dif/pop_acs,2))
pop_cmp %>%
summarise(pop_cw = sum(pop_cw), pop_acs = sum(pop_acs)) %>%
mutate(dif = pop_cw - pop_acs, dif_pct = round(dif/pop_acs, 3))
pop_cmp %>%
summarise(pop_cw = sum(pop_cw), pop_acs = sum(pop_acs)) %>%
mutate(dif = pop_cw - pop_acs, dif_pct = round(dif/pop_acs, 5))
pop_cmp %>%
group_by(hsacity) %>%
summarise(pop_cw = sum(pop_cw), pop_acs = sum(pop_acs)) %>%
mutate(dif = pop_cw - pop_acs, dif_pct = round(dif/pop_acs, 5))
pop_cmp %>%
group_by(hsacity) %>%
summarise(pop_cw = sum(pop_cw), pop_acs = sum(pop_acs)) %>%
mutate(dif = pop_cw - pop_acs, dif_pct = round(dif/pop_acs, 5)) %>%
print(n=34)
pop_cmp %>%
group_by(hsacity) %>%
summarise(pop_cw = sum(pop_cw), pop_acs = sum(pop_acs)) %>%
mutate(dif = pop_cw - pop_acs, dif_pct = round(dif/pop_acs, 5)) %>%
arrange(pop_cw)
pop_cmp %>%
group_by(hsacity) %>%
summarise(pop_cw = sum(pop_cw), pop_acs = sum(pop_acs)) %>%
mutate(dif = pop_cw - pop_acs, dif_pct = round(dif/pop_acs, 5)) %>%
arrange(pop_cw) %>%
print(n=34)
pop_cmp %>%
group_by(hsacity) %>%
summarise(pop_cw = sum(pop_cw), pop_acs = sum(pop_acs)) %>%
mutate(dif = round(pop_cw - pop_acs,0), dif_pct = round(dif/pop_acs, 5)) %>%
arrange(pop_cw) %>%
print(n=34)
group_by(agesex_grp) %>%
summarise(pop_cw = sum(pop_cw), pop_acs = sum(pop_acs)) %>%
mutate(dif = round(pop_cw - pop_acs,0), dif_pct = round(dif/pop_acs, 5)) %>%
arrange(pop_cw) %>%
print(n=34)
pop_cmp
pop_cmp %>%
filter(hsacity == "Greenville") %>%
group_by(agesex_grp) %>%
summarise(pop_cw = sum(pop_cw), pop_acs = sum(pop_acs)) %>%
mutate(dif = round(pop_cw - pop_acs,0), dif_pct = round(dif/pop_acs, 5)) %>%
arrange(pop_cw) %>%
print(n=34)
pop_cmp %>%
filter(hsacity == "Greenville") %>%
mutate(age = str_replace(agesex_grp, "M_|F_", "")) %>%
group_by(agesex_grp) %>%
summarise(pop_cw = sum(pop_cw), pop_acs = sum(pop_acs)) %>%
mutate(dif = round(pop_cw - pop_acs,0), dif_pct = round(dif/pop_acs, 5)) %>%
arrange(pop_cw) %>%
print(n=34)
pop_cmp %>%
filter(hsacity == "Greenville") %>%
mutate(age = str_replace(agesex_grp, "M_|F_", "")) %>%
group_by(age) %>%
summarise(pop_cw = sum(pop_cw), pop_acs = sum(pop_acs)) %>%
mutate(dif = round(pop_cw - pop_acs,0), dif_pct = round(dif/pop_acs, 5)) %>%
arrange(age) %>%
print(n=34)
pop_cmp %>%
mutate(age = str_replace(agesex_grp, "M_|F_", "")) %>%
group_by(age) %>%
summarise(pop_cw = sum(pop_cw), pop_acs = sum(pop_acs)) %>%
mutate(dif = round(pop_cw - pop_acs,0), dif_pct = round(dif/pop_acs, 5)) %>%
arrange(pop_cw) %>%
print(n=34)
pop_cmp %>%
mutate(age = str_replace(agesex_grp, "M_|F_", "")) %>%
group_by(age) %>%
summarise(pop_cw = sum(pop_cw), pop_acs = sum(pop_acs)) %>%
mutate(dif = round(pop_cw - pop_acs,0), dif_pct = round(dif/pop_acs, 5)) %>%
arrange(age) %>%
print(n=34)
library(tidyverse)
rm(list=ls())
df <- read.csv(text = "
ME,23,001,Androscoggin County,H1
ME,23,003,Aroostook County,H1
ME,23,005,Cumberland County,H1
ME,23,007,Franklin County,H1
ME,23,009,Hancock County,H1
ME,23,011,Kennebec County,H1
ME,23,013,Knox County,H1
ME,23,015,Lincoln County,H1
ME,23,017,Oxford County,H1
ME,23,019,Penobscot County,H1
ME,23,021,Piscataquis County,H1
ME,23,023,Sagadahoc County,H1
ME,23,025,Somerset County,H1
ME,23,027,Waldo County,H1
ME,23,029,Washington County,H1
ME,23,031,York County,H1")
df
df <- read.csv(text = "
state, fips, county, h1
ME,23001,Androscoggin County,H1
ME,23003,Aroostook County,H1
ME,23005,Cumberland County,H1
ME,23007,Franklin County,H1
ME,23009,Hancock County,H1
ME,23011,Kennebec County,H1
ME,23013,Knox County,H1
ME,23015,Lincoln County,H1
ME,23017,Oxford County,H1
ME,23019,Penobscot County,H1
ME,23021,Piscataquis County,H1
ME,23023,Sagadahoc County,H1
ME,23025,Somerset County,H1
ME,23027,Waldo County,H1
ME,23029,Washington County,H1
ME,23031,York County,H1")
df
df[,-"h1"]
df[,c(-1,-4)]
write.csv(df[,c(-1,-4)],"county_fips.csv", row.names = F)
library(tidyverse)
options(stringsAsFactors = F)
crosswalk <-  read.csv("ZipHsaHrr13.csv", stringsAsFactors = F) %>%
filter(hsastate %in% c("ME","NH")) %>%
select(zipcode13, hsanum, hsacity, hsastate)
all_content = readLines("ACS_raw/ACS_14_5YR_S1701_with_ann.csv")
skip_second = all_content[-2]
poverty = read.csv(textConnection(skip_second), header = TRUE, stringsAsFactors = FALSE)
poverty_key = read.csv("ACS_raw/ACS_14_5YR_S1701_metadata.csv", stringsAsFactors = F, col.names = c("var","label"))
names(poverty_key)
poverty_key %>% filter(var %in% c("HC02_EST_VC01", "HC01_EST_VC01"))
head(poverty_key,10)
poverty2 <-  poverty %>%
mutate(num = HC02_EST_VC01, denom = HC01_EST_VC01) %>%
select(GEO.id2,  num, denom) %>%
mutate(zipcode13 = GEO.id2) %>%
left_join(crosswalk, by = "zipcode13" )
View(poverty)
poverty2 <-  poverty %>%
mutate(num = HC02_EST_VC01, denom = HC01_EST_VC01) %>%
select(GEO.id2,  num, denom) %>%
mutate(zipcode13 = GEO.id2) %>%
left_join(crosswalk, by = "zipcode13" )
table(poverty2$hsastate)
poverty2 %>% filter(hsastate == "NH")
hsa_poverty <- poverty %>%
group_by(hsacity) %>%
summarise(poverty_pct = sum(num)/sum(denom))
library(tidyverse)
hsa_pop <- read_csv("./output tables/hsa_pop.csv")
hsa_pop <- read_csv("./output tables/hsa_pop.csv")
hsa_pop <- read_csv("./output tables/hsa_pop.csv")
hsa_pop <- read_csv("./output tables/hsa_pop.csv", col_types = "icicd")
hsa_pop <- read_csv("./output tables/hsa_pop.csv", col_types = "iciccd")
unique(hsa_pop$hsacity)
poverty2 %>% filter(hsastate == "NH")
hsa_pop %>% filter(hsastate == "NH") %>% .[["hsacity"]] %>% unique()
hsa_pop %>% filter(hsastate == "NH")
hsa_pop <- hsa_pop %>% filter(hsacity != "Portsmouth")
poverty2 %>% filter(hsastate == "NH")
poverty2 <- poverty2 %>%
filter(hsastate == "ME" | hsacity == "Dover")
poverty2 %>% filter(hsastate == "NH")
hsa_poverty <- poverty %>%
group_by(hsacity) %>%
summarise(poverty_pct = sum(num)/sum(denom))
hsa_poverty <- povert2y %>%
group_by(hsacity) %>%
summarise(poverty_pct = sum(num)/sum(denom))
hsa_poverty <- poverty2 %>%
group_by(hsacity) %>%
summarise(poverty_pct = sum(num)/sum(denom))
hsa_poverty
write_csv(hsa_poverty, "./output tables/hsa_pov.csv")
library(lubridate)
lakers
origin
lakers
games <- lakers %>%
distinct(date, opponent, game_type)
games
games <- lakers %>%
distinct(date, opponent, game_type)
games
library(tidyverse)
library(tidyverse)
library(lubridate)
lakers
games <- lakers %>%
distinct(date, opponent, game_type)
games
mutate(date2 = parse_date(date))
mutate(date2 = parse_date(as.character(date), format = "ymd")
games
games <- lakers %>%
# just take distinct combinations of game level variables
distinct(date, opponent, game_type) %>%
# convert date variable to an actual date
mutate(date2 = parse_date(as.character(date), format = "ymd")
games
games <- lakers %>%
# just take distinct combinations of game level variables
distinct(date, opponent, game_type) %>%
# convert date variable to an actual date
mutate(date2 = parse_date(as.character(date), format = "ymd")
games
games <- lakers %>%
# just take distinct combinations of game level variables
distinct(date, opponent, game_type) %>%
# convert date variable to an actual date
mutate(date2 = parse_date(as.character(date), format = "ymd"))
?parse_date
games <- lakers %>%
# just take distinct combinations of game level variables
distinct(date, opponent, game_type) %>%
# convert date variable to an actual date
mutate(date2 = parse_date(as.character(date), format = "%Y%m%d"))
games
games <- lakers %>%
# just take distinct combinations of game level variables
distinct(date, opponent, game_type) %>%
# convert date variable to an actual date
mutate(date2 = parse_date(as.character(date), format = "%Y%m%d")) %>%
# sort by date
arrange(date2) %>%
# use offset funtion to calculate date difference
mutate(prior_date = lag(date2))
games
games <- lakers %>%
# just take distinct combinations of game level variables
distinct(date, opponent, game_type) %>%
# convert date variable to an actual date
mutate(date2 = parse_date(as.character(date), format = "%Y%m%d")) %>%
# sort by date
arrange(date2) %>%
# use offset funtion to calculate date difference
mutate(prior_date = lag(date2)) %>%
mutate(date_diff = date2 - prior_date)
games
games <- lakers %>%
# just take distinct combinations of game level variables
distinct(date, opponent, game_type) %>%
# convert date variable to an actual date
mutate(date2 = parse_date(as.character(date), format = "%Y%m%d")) %>%
# sort by date
arrange(date2) %>%
# use offset funtion to calculate date difference
mutate(prior_date = lag(date2)) %>%
mutate(date_diff = date2 - prior_date) %>%
# convert the time difference to a numeric variable
mutate(date_diff_num = as.numeric(date_diff))
games
games <- lakers %>%
# just take distinct combinations of game level variables
distinct(date, opponent, game_type) %>%
# convert date variable to an actual date
mutate(date = parse_date(as.character(date), format = "%Y%m%d")) %>%
# sort by date
arrange(date) %>%
# use offset funtion to calculate date difference
mutate(date_diff_num = as.numeric(date - lag(date)))
games
head(lakers)
?filter_at
